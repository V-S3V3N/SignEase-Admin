{"ast":null,"code":"var _s = $RefreshSig$();\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../firebase\";\nconst usePlan = () => {\n  _s();\n  const [revenueData, setRevenueData] = useState([]);\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, \"planrevenue\"), async snapshot => {\n      const dataWithPlanDetails = await Promise.all(snapshot.docs.map(async docSnap => {\n        const revenue = docSnap.data();\n        const planId = docSnap.id;\n\n        // Reference to the matching plan document\n        const planRef = doc(db, \"plans\", planId);\n        const planSnap = await getDoc(planRef);\n        return {\n          planId,\n          ...revenue,\n          ...(planSnap.exists() ? planSnap.data() : {}) // merges name, desc, etc.\n        };\n      }));\n      setRevenueData(dataWithPlanDetails);\n    });\n    return () => unsubscribe();\n  }, []);\n  return revenueData;\n};\n_s(usePlan, \"/6+yFiaCGQCTGZhW9zdobzba6kQ=\");\nexport default usePlan;","map":{"version":3,"names":["collection","onSnapshot","useEffect","useState","db","usePlan","_s","revenueData","setRevenueData","unsubscribe","snapshot","dataWithPlanDetails","Promise","all","docs","map","docSnap","revenue","data","planId","id","planRef","doc","planSnap","getDoc","exists"],"sources":["C:/FYP/Application/SignEase/signease-admin/client/src/hooks/usePlan.js"],"sourcesContent":["import { collection, onSnapshot } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst usePlan = () => {\r\n  const [revenueData, setRevenueData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(collection(db, \"planrevenue\"), async (snapshot) => {\r\n      const dataWithPlanDetails = await Promise.all(\r\n        snapshot.docs.map(async (docSnap) => {\r\n          const revenue = docSnap.data();\r\n          const planId = docSnap.id;\r\n\r\n          // Reference to the matching plan document\r\n          const planRef = doc(db, \"plans\", planId);\r\n          const planSnap = await getDoc(planRef);\r\n\r\n          return {\r\n            planId,\r\n            ...revenue,\r\n            ...(planSnap.exists() ? planSnap.data() : {}) // merges name, desc, etc.\r\n          };\r\n        })\r\n      );\r\n\r\n      setRevenueData(dataWithPlanDetails);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return revenueData;\r\n};\r\n\r\nexport default usePlan;\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC3D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAGR,UAAU,CAACD,UAAU,CAACI,EAAE,EAAE,aAAa,CAAC,EAAE,MAAOM,QAAQ,IAAK;MAChF,MAAMC,mBAAmB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC3CH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAC,MAAOC,OAAO,IAAK;QACnC,MAAMC,OAAO,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC;QAC9B,MAAMC,MAAM,GAAGH,OAAO,CAACI,EAAE;;QAEzB;QACA,MAAMC,OAAO,GAAGC,GAAG,CAAClB,EAAE,EAAE,OAAO,EAAEe,MAAM,CAAC;QACxC,MAAMI,QAAQ,GAAG,MAAMC,MAAM,CAACH,OAAO,CAAC;QAEtC,OAAO;UACLF,MAAM;UACN,GAAGF,OAAO;UACV,IAAIM,QAAQ,CAACE,MAAM,CAAC,CAAC,GAAGF,QAAQ,CAACL,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC;MACH,CAAC,CACH,CAAC;MAEDV,cAAc,CAACG,mBAAmB,CAAC;IACrC,CAAC,CAAC;IAEF,OAAO,MAAMF,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,WAAW;AACpB,CAAC;AAACD,EAAA,CA7BID,OAAO;AA+Bb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}