{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nexport function useRevenueChartData() {\n  _s();\n  const [monthlyRevenueArray, setMonthlyRevenueArray] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMonthlyData = async () => {\n      const snapshot = await getDocs(collection(db, \"planrevenue\"));\n      const monthlyTotals = Array(12).fill(0);\n      snapshot.forEach(doc => {\n        var _data$timestamp, _data$timestamp$toDat;\n        const data = doc.data();\n        const timestamp = (_data$timestamp = data.timestamp) === null || _data$timestamp === void 0 ? void 0 : (_data$timestamp$toDat = _data$timestamp.toDate) === null || _data$timestamp$toDat === void 0 ? void 0 : _data$timestamp$toDat.call(_data$timestamp);\n        const monthIndex = timestamp === null || timestamp === void 0 ? void 0 : timestamp.getMonth(); // 0 for Jan, 1 for Feb, etc.\n        if (monthIndex !== undefined) {\n          monthlyTotals[monthIndex] += data.amount || 0;\n        }\n      });\n      setMonthlyRevenueArray(monthlyTotals);\n      setLoading(false);\n    };\n    fetchMonthlyData();\n  }, []);\n  return {\n    monthlyRevenueArray,\n    loading\n  };\n}\n_s(useRevenueChartData, \"wc6t89EAObIwid0xrDs/hWs4KMk=\");","map":{"version":3,"names":["useEffect","useState","collection","getDocs","db","useRevenueChartData","_s","monthlyRevenueArray","setMonthlyRevenueArray","loading","setLoading","fetchMonthlyData","snapshot","monthlyTotals","Array","fill","forEach","doc","_data$timestamp","_data$timestamp$toDat","data","timestamp","toDate","call","monthIndex","getMonth","undefined","amount"],"sources":["C:/FYP/Application/SignEase/signease-admin/client/src/hooks/useRevenueChartData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { collection, getDocs} from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\n\r\nexport function useRevenueChartData() {\r\n  const [monthlyRevenueArray, setMonthlyRevenueArray] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMonthlyData = async () => {\r\n      const snapshot = await getDocs(collection(db, \"planrevenue\"));\r\n      const monthlyTotals = Array(12).fill(0);\r\n\r\n      snapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        const timestamp = data.timestamp?.toDate?.();\r\n        const monthIndex = timestamp?.getMonth(); // 0 for Jan, 1 for Feb, etc.\r\n        if (monthIndex !== undefined) {\r\n          monthlyTotals[monthIndex] += data.amount || 0;\r\n        }\r\n      });\r\n\r\n      setMonthlyRevenueArray(monthlyTotals);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchMonthlyData();\r\n  }, []);\r\n\r\n  return { monthlyRevenueArray, loading };\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,OAAO,QAAO,oBAAoB;AACvD,SAASC,EAAE,QAAQ,aAAa;AAEhC,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACD,UAAU,CAACE,EAAE,EAAE,aAAa,CAAC,CAAC;MAC7D,MAAMS,aAAa,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MAEvCH,QAAQ,CAACI,OAAO,CAACC,GAAG,IAAI;QAAA,IAAAC,eAAA,EAAAC,qBAAA;QACtB,MAAMC,IAAI,GAAGH,GAAG,CAACG,IAAI,CAAC,CAAC;QACvB,MAAMC,SAAS,IAAAH,eAAA,GAAGE,IAAI,CAACC,SAAS,cAAAH,eAAA,wBAAAC,qBAAA,GAAdD,eAAA,CAAgBI,MAAM,cAAAH,qBAAA,uBAAtBA,qBAAA,CAAAI,IAAA,CAAAL,eAAyB,CAAC;QAC5C,MAAMM,UAAU,GAAGH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAID,UAAU,KAAKE,SAAS,EAAE;UAC5Bb,aAAa,CAACW,UAAU,CAAC,IAAIJ,IAAI,CAACO,MAAM,IAAI,CAAC;QAC/C;MACF,CAAC,CAAC;MAEFnB,sBAAsB,CAACK,aAAa,CAAC;MACrCH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,mBAAmB;IAAEE;EAAQ,CAAC;AACzC;AAACH,EAAA,CA1BeD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}